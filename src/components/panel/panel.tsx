import { FC, useEffect, useState } from "react";
import styles from "./panel.module.scss";
import { instance } from "../../api/config";

type Request = {
  id: number;
  name: string;
  status: string;
  guest?: string;
  drinks?: string;
  transport?: string;
};

export const Panel: FC = () => {
  const [requests, setRequests] = useState<Request[]>([]);

  const [error, setError] = useState<string>("");

  const [totalRequests, setTotalRequests] = useState<number>(0);

  const [willComeAmount, setWillComeAmount] = useState<number>(0);
  const [willComeWithPairAmount, setWillComeWithPairAmount] =
    useState<number>(0);
  const [needTransportAmount, setNeedTransportAmount] = useState<number>(0);

  const [djin, setDjin] = useState<number>(0);
  const [whiteWine, setWiteWine] = useState<number>(0);
  const [redWine, setRedWine] = useState<number>(0);
  const [champagne, setChampagne] = useState<number>(0);
  const [vodka, setVodka] = useState<number>(0);
  const [noDrink, setNoDrink] = useState<number>(0);

  const handleAmount = (array: Request[]) => {
    array.forEach((item) => {
      if (item.status === "–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–¥—É")
        setWillComeAmount((count) => count + 1);
    });

    array.forEach((item) => {
      if (item.status === "–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–¥—É —Å –ø–∞—Ä–æ–π")
        setWillComeWithPairAmount((count) => count + 1);
    });

    array.forEach((item) => {
      if (item.status === "–Ω–∞ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–µ")
        setNeedTransportAmount((count) => count + 1);
    });

    array.forEach((item) => {
      if (item.drinks) {
        const drinks: string[] = JSON.parse(item.drinks);
        console.log(drinks);
        drinks.forEach((item) => {
          if (item === "–î–∂–∏–Ω") setDjin((count) => count + 1);
          if (item === "–í–∏–Ω–æ –±–µ–ª–æ–µ") setWiteWine((count) => count + 1);
          if (item === "–í–∏–Ω–æ –∫—Ä–∞—Å–Ω–æ–µ") setRedWine((count) => count + 1);
          if (item === "–®–∞–º–ø–∞–Ω—Å–∫–æ–µ") setChampagne((count) => count + 1);
          if (item === "–í–æ–¥–∫–∞") setVodka((count) => count + 1);
          if (item === "–ù–µ –ø—å—é") setNoDrink((count) => count + 1);
        });
      }
    });
  };

  const getInitialData = async () => {
    const requestsResponse = await instance
      .get("requests")
      .then((response) => response.data as Request[])
      .catch((err) => {
        setError(err as string);
      });

    if (!requestsResponse) return;

    setRequests(requestsResponse);

    setTotalRequests(requestsResponse.length);
    handleAmount(requestsResponse);
  };

  useEffect(() => {
    getInitialData();
  }, []);

  return (
    <div className={styles.container}>
      <div className={styles.filters}>
        <div>
          <h2>–ò—Ç–æ–≥–æ –∑–∞—è–≤–æ–∫: </h2>
          <span>{totalRequests}</span>
        </div>
        <div>
          <h2>–ò–∑ –Ω–∏—Ö –ø—Ä–∏–¥—É—Ç –æ–¥–Ω–∏: </h2>
          <span>{willComeAmount}</span>
        </div>
        <div>
          <h2>–° –ø–∞—Ä–æ–π –ø—Ä–∏–¥—É—Ç: </h2>
          <span>{willComeWithPairAmount}</span>
        </div>
        <div>
          <h2>–ù—É–∂–µ–Ω —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç: </h2>
          <span>{needTransportAmount}</span>
        </div>
        <div>
          <h2>–ò–∑ –Ω–∏—Ö –≤—ã–±—Ä–∞–ª–∏: </h2>
        </div>
        <div className={styles.drinks}>
          <div>
            <p>
              –î–∂–∏–Ωüçπ: <span>{djin}</span>
            </p>
            <p>
              –í–∏–Ω–æ –±–µ–ª–æ–µüç∂: <span>{whiteWine}</span>
            </p>
            <p>
              –í–∏–Ω–æ –∫—Ä–∞—Å–Ω–æ–µüç∑: <span>{redWine}</span>
            </p>
          </div>
          <div>
            <p>
              –®–∞–º–ø–∞–Ω—Å–∫–æ–µü•Ç: <span>{champagne}</span>
            </p>
            <p>
              –í–æ–¥–∫—Éüç∏: <span>{vodka}</span>
            </p>
            <p>
              –ù–µ –ø—å—é—Çüçº: <span>{noDrink}</span>
            </p>
          </div>
        </div>
        <div>
          <h2>–ò—Ç–æ–≥–æ –≥–æ—Å—Ç–µ–π: </h2>
          <span>{willComeAmount + willComeWithPairAmount * 2}</span>
        </div>
      </div>
      <div className={styles.requests}>
        {requests.map((item) => (
          <div className={styles.request}>
            <span>{item.id}</span>
            <div>
              <h2>–ò–º—è: </h2>
              <p>{item.name}</p>
            </div>
            <div>
              <h2>–°—Ç–∞—Ç—É—Å: </h2>
              <p>{item.status}</p>
            </div>
            {item.guest && (
              <div>
                <h2>–ì–æ—Å—Ç—å: </h2>
                <p>{item.guest}</p>
              </div>
            )}
            {item.drinks && (
              <div>
                <h2>–ù–∞–ø–∏—Ç–∫–∏: </h2>
                <p>{item.drinks}</p>
              </div>
            )}
            {item.transport && (
              <div>
                <h2>–ö–∞–∫ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç –¥–æ–±–∏—Ä–∞—Ç—å—Å—è: </h2>
                <p>{item.transport}</p>
              </div>
            )}
          </div>
        ))}
      </div>
    </div>
  );
};
